/// <reference types="node" />
export interface IEd25519Signature2018Options {
    key?: any;
    date?: any;
    signer?: any;
}
export declare class Ed25519Signature2018 {
    useNativeCanonize: boolean;
    key: any;
    proof: any;
    date: any;
    originalDate: any;
    creator: any;
    type: string;
    signer: any;
    verifier: any;
    verificationMethod?: string;
    constructor(options?: IEd25519Signature2018Options);
    ensureSuiteContext({ document }: any): void;
    canonize(input: any, { documentLoader, expansionMap, skipExpansion }: any): Promise<any>;
    canonizeProof(proof: any, { documentLoader, expansionMap }: any): Promise<any>;
    createVerifyData({ document, proof, documentLoader, expansionMap }: any): Promise<Buffer>;
    matchProof({ proof }: any): Promise<boolean>;
    sign({ verifyData, proof }: any): Promise<any>;
    createProof({ document, purpose, documentLoader, expansionMap, compactProof }: any): Promise<any>;
    getVerificationMethod({ proof, documentLoader }: any): Promise<any>;
    verifySignature({ verifyData, verificationMethod, proof }: any): Promise<boolean>;
    verifyProof({ proof, document, purpose, documentLoader, expansionMap, compactProof }: any): Promise<{
        verified: boolean;
        purposeResult: any;
        error?: undefined;
    } | {
        verified: boolean;
        error: any;
        purposeResult?: undefined;
    }>;
}
