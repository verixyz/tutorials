import { CredentialPayload, IMessage, PresentationPayload, VerifiableCredential, VerifiablePresentation, W3CVerifiableCredential, W3CVerifiablePresentation } from '@verixyz/core';
export declare const MANDATORY_CREDENTIAL_CONTEXT = "https://www.w3.org/2018/credentials/v1";
/**
 * Processes an entry or an array of entries into an array of entries. If a `startWithEntry` param is provided, it is
 * set as the first item in the result array.
 * @param inputEntryOrArray
 * @param startWithEntry
 *
 * @beta This API may change without prior notice.
 */
export declare function processEntryToArray(inputEntryOrArray?: string | string[] | null, startWithEntry?: string): string[];
/**
 * Parses a {@link W3CVerifiableCredential} and converts it to a {@link VerifiableCredential} so it is easier to use
 * programmatically.
 *
 * @param input

 * @beta This API may change without prior notice.
 */
export declare function decodeCredentialToObject(input: W3CVerifiableCredential): VerifiableCredential;
/**
 * Parses a {@link W3CVerifiableCredential} and converts it to a {@link VerifiablePresentation} so it is easier to use
 * programmatically.
 *
 * @param input

 * @beta This API may change without prior notice.
 */
export declare function decodePresentationToObject(input: W3CVerifiablePresentation): VerifiablePresentation;
/**
 * Computes a hash for a given credential or presentation.
 * This hash is usable as an internal ID for database indexing
 *
 * @param input
 *
 * @beta This API may change without prior notice.
 */
export declare function computeEntryHash(input: W3CVerifiableCredential | W3CVerifiablePresentation | IMessage): string;
/**
 * Decodes a credential or presentation and returns the issuer ID
 * `iss` from a JWT or `issuer`/`issuer.id` from a VC or `holder` from a VP
 *
 * @param input
 *
 * @beta This API may change without prior notice.
 */
export declare function extractIssuer(input?: W3CVerifiableCredential | W3CVerifiablePresentation | CredentialPayload | PresentationPayload | null): string;
//# sourceMappingURL=credential-utils.d.ts.map