import { RequireOnly, TKeyType } from '@verixyz/core';
export interface ManagedPrivateKey {
    alias: string;
    privateKeyHex: string;
    type: TKeyType;
}
export declare type ImportablePrivateKey = RequireOnly<ManagedPrivateKey, 'privateKeyHex' | 'type'>;
export declare abstract class AbstractPrivateKeyStore {
    abstract import(args: ImportablePrivateKey): Promise<ManagedPrivateKey>;
    abstract get(args: {
        alias: string;
    }): Promise<ManagedPrivateKey>;
    abstract delete(args: {
        alias: string;
    }): Promise<boolean>;
    abstract list(args: {}): Promise<Array<ManagedPrivateKey>>;
}
//# sourceMappingURL=abstract-private-key-store.d.ts.map