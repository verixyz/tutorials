"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractKeyManagementSystem = void 0;
const bytes_1 = require("@ethersproject/bytes");
const transactions_1 = require("@ethersproject/transactions");
const u8a = __importStar(require("uint8arrays"));
class AbstractKeyManagementSystem {
    /**@deprecated please use `sign({key, alg: 'eth_signTransaction', data: arrayify(serialize(transaction))})` instead */
    signEthTX({ key, transaction }) {
        return __awaiter(this, void 0, void 0, function* () {
            const _a = transaction, { v, r, s, from } = _a, tx = __rest(_a, ["v", "r", "s", "from"]);
            const data = (0, bytes_1.arrayify)((0, transactions_1.serialize)(tx));
            const algorithm = 'eth_signTransaction';
            const signedTxHexString = this.sign({ keyRef: key, data, algorithm });
            return signedTxHexString;
        });
    }
    /**@deprecated please use `sign({key, data})` instead, with `Uint8Array` data */
    signJWT({ key, data }) {
        return __awaiter(this, void 0, void 0, function* () {
            let dataBytes;
            if (typeof data === 'string') {
                try {
                    dataBytes = (0, bytes_1.arrayify)(data, { allowMissingPrefix: true });
                }
                catch (e) {
                    dataBytes = u8a.fromString(data, 'utf-8');
                }
            }
            else {
                dataBytes = data;
            }
            return this.sign({ keyRef: key, data: dataBytes });
        });
    }
}
exports.AbstractKeyManagementSystem = AbstractKeyManagementSystem;
//# sourceMappingURL=abstract-key-management-system.js.map