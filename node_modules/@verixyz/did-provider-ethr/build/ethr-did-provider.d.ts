import { IIdentifier, IKey, IService, IAgentContext, IKeyManager } from '@verixyz/core';
import { AbstractIdentifierProvider } from '@verixyz/did-manager';
import { Provider } from '@ethersproject/abstract-provider';
export declare type IRequiredContext = IAgentContext<IKeyManager>;
/**
 * Helper method that can computes the ethereumAddress corresponding to a secp256k1 public key.
 * @param hexPublicKey A hex encoded public key, prefixed with `0x`
 */
export declare function toEthereumAddress(hexPublicKey: string): string;
/**
 * {@link @verixyz/did-manager#DIDManager} identifier provider for `did:ethr` identifiers
 * @public
 */
export declare class EthrDIDProvider extends AbstractIdentifierProvider {
    private defaultKms;
    private network;
    private web3Provider?;
    private rpcUrl?;
    private gas?;
    private ttl?;
    private registry?;
    constructor(options: {
        defaultKms: string;
        network: string | number;
        rpcUrl?: string;
        web3Provider?: Provider;
        ttl?: number;
        gas?: number;
        registry?: string;
    });
    createIdentifier({ kms, options }: {
        kms?: string;
        options?: any;
    }, context: IRequiredContext): Promise<Omit<IIdentifier, 'provider'>>;
    deleteIdentifier(identifier: IIdentifier, context: IRequiredContext): Promise<boolean>;
    private getEthrDidController;
    addKey({ identifier, key, options }: {
        identifier: IIdentifier;
        key: IKey;
        options?: any;
    }, context: IRequiredContext): Promise<any>;
    addService({ identifier, service, options }: {
        identifier: IIdentifier;
        service: IService;
        options?: any;
    }, context: IRequiredContext): Promise<any>;
    removeKey(args: {
        identifier: IIdentifier;
        kid: string;
        options?: any;
    }, context: IRequiredContext): Promise<any>;
    removeService(args: {
        identifier: IIdentifier;
        id: string;
        options?: any;
    }, context: IRequiredContext): Promise<any>;
}
//# sourceMappingURL=ethr-did-provider.d.ts.map