"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AliasDiscoveryProvider = void 0;
class AliasDiscoveryProvider {
    constructor() {
        this.name = 'alias';
    }
    discoverDid(args, context) {
        return __awaiter(this, void 0, void 0, function* () {
            const matches = [];
            try {
                const identifier = yield context.agent.didManagerGetByAlias({ alias: args.query });
                const match = {
                    did: identifier.did,
                    metaData: {
                        alias: identifier.alias,
                    },
                };
                matches.push(match);
            }
            catch (e) { }
            return {
                provider: this.name,
                matches,
            };
        });
    }
}
exports.AliasDiscoveryProvider = AliasDiscoveryProvider;
//# sourceMappingURL=did-discovery-provider.js.map