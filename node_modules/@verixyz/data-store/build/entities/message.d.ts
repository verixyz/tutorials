import { BaseEntity } from 'typeorm';
import { IMessage } from '@verixyz/core';
import { Identifier } from './identifier';
import { Presentation } from './presentation';
import { Credential } from './credential';
export interface MetaData {
    type: string;
    value?: string;
}
export declare class Message extends BaseEntity {
    setId(): void;
    id: string;
    setSaveDate(): void;
    setUpdateDate(): void;
    saveDate: Date;
    updateDate: Date;
    createdAt?: Date;
    expiresAt?: Date;
    threadId?: string;
    type: string;
    raw?: string;
    data?: object | null;
    replyTo?: string[];
    replyUrl?: string;
    from?: Identifier;
    to?: Identifier;
    metaData?: MetaData[] | null;
    presentations: Presentation[];
    credentials: Credential[];
}
export declare const createMessageEntity: (args: IMessage) => Message;
export declare const createMessage: (args: Message) => IMessage;
//# sourceMappingURL=message.d.ts.map