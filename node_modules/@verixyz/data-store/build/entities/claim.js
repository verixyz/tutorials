"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Claim = void 0;
const typeorm_1 = require("typeorm");
const identifier_1 = require("./identifier");
const credential_1 = require("./credential");
let Claim = class Claim extends typeorm_1.BaseEntity {
};
__decorate([
    (0, typeorm_1.PrimaryColumn)(),
    __metadata("design:type", String)
], Claim.prototype, "hash", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => identifier_1.Identifier, (identifier) => identifier.issuedClaims, {
        eager: true,
        onDelete: 'CASCADE',
    }),
    __metadata("design:type", identifier_1.Identifier)
], Claim.prototype, "issuer", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => identifier_1.Identifier, (identifier) => identifier.receivedClaims, {
        eager: true,
        nullable: true,
    }),
    __metadata("design:type", identifier_1.Identifier)
], Claim.prototype, "subject", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)((type) => credential_1.Credential, (credential) => credential.claims, {
        onDelete: 'CASCADE',
    }),
    __metadata("design:type", credential_1.Credential)
], Claim.prototype, "credential", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    __metadata("design:type", Date)
], Claim.prototype, "issuanceDate", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", Date)
], Claim.prototype, "expirationDate", void 0);
__decorate([
    (0, typeorm_1.Column)('simple-array'),
    __metadata("design:type", Array)
], Claim.prototype, "context", void 0);
__decorate([
    (0, typeorm_1.Column)('simple-array'),
    __metadata("design:type", Array)
], Claim.prototype, "credentialType", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    __metadata("design:type", String)
], Claim.prototype, "type", void 0);
__decorate([
    (0, typeorm_1.Column)('text', { nullable: true }),
    __metadata("design:type", Object)
], Claim.prototype, "value", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    __metadata("design:type", Boolean)
], Claim.prototype, "isObj", void 0);
Claim = __decorate([
    (0, typeorm_1.Entity)('claim')
], Claim);
exports.Claim = Claim;
//# sourceMappingURL=claim.js.map