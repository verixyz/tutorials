/**
 * {@link https://typeorm.io/ | TypeORM } backed plugins. {@link @verixyz/core#Agent}
 * {@link @verixyz/data-store#DataStore | plugin} that implements {@link @verixyz/core#IDataStore } interface.
 * {@link @verixyz/core#Agent} {@link @verixyz/data-store#DataStoreORM | plugin} that implements
 * {@link @verixyz/data-store#IDataStoreORM} interface. Provides {@link @verixyz/data-store#KeyStore} for
 * {@link @verixyz/key-manager#KeyManager} and {@link @verixyz/data-store#DIDStore} for
 * {@link @verixyz/did-manager#DIDManager}
 *
 * @packageDocumentation
 */
export { DIDStore } from './identifier/did-store';
export { KeyStore } from './identifier/key-store';
export { PrivateKeyStore } from './identifier/private-key-store';
export { DataStore } from './data-store';
export { DataStoreORM } from './data-store-orm';
export { ProfileDiscoveryProvider } from './did-discovery-provider';
import { Key, KeyType } from './entities/key';
import { Identifier } from './entities/identifier';
import { Claim } from './entities/claim';
import { Credential } from './entities/credential';
import { Presentation } from './entities/presentation';
import { Service } from './entities/service';
import { Message, MetaData } from './entities/message';
import { PrivateKey } from './entities/private-key';
import { PreMigrationKey } from './entities/PreMigrationEntities';
export declare const Entities: (typeof Key | typeof Identifier | typeof Service | typeof Claim | typeof Credential | typeof Presentation | typeof Message | typeof PrivateKey | typeof PreMigrationKey)[];
export { KeyType, Key, Identifier, Message, Claim, Credential, Presentation, MetaData, Service, PrivateKey, PreMigrationKey, };
export { migrations } from './migrations';
//# sourceMappingURL=index.d.ts.map